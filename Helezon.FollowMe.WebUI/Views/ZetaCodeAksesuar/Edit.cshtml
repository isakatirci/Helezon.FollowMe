@using Helezon.FollowMe.WebUI.Models.ViewModels
@model AksesuarEditVm
@{
    ViewBag.Title = "";
    Layout = "~/Views/Shared/_LayoutZetaCode.cshtml";
    var update = Model != null && Model.Aksesuar != null && Model.Aksesuar.Id > 0;
}

@section afterGlobalStyles
    {

    @*<link href="~/Content/global/plugins/ion.rangeslider/css/ion.rangeSlider.css" rel="stylesheet" type="text/css" />
        <link href="~/Content/global/plugins/ion.rangeslider/css/ion.rangeSlider.skinModern.css" rel="stylesheet" />*@

    @*<link href="~/Content/global/plugins/nouislider/nouislider.min.css" rel="stylesheet" type="text/css" />
        <link href="~/Content/global/plugins/nouislider/nouislider.pips.css" rel="stylesheet" type="text/css" />*@
    <link href="~/Content/global/plugins/bootstrap-touchspin/bootstrap.touchspin.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/noUiSlider/nouislider.min.css" rel="stylesheet" />
    <style>
        .noUi-tooltip {
            display: none;
        }

        .noUi-active .noUi-tooltip {
            display: block;
        }
    </style>
}

<form action="/ZetaCodeAksesuar/Edit" id="frmZetaCodeAksesuar" method="post">
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Aksesuar.Id)
    @Html.HiddenFor(model => model.Aksesuar.ZetaCode)

    <div class="portlet box green">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-gift"></i>Zeta Code Aksesuar @(update ? "Edit Page" : "Create")
            </div>
            <div class="tools">
            </div>
        </div>
        <div class="portlet-body">
            <div class="panel-group accordion" id="accordion1">

                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion1" href="#collapse_1"> Group #1 </a>
                        </h4>
                    </div>
                    <div id="collapse_1" class="panel-collapse in">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-horizontal form-bordered form-row-stripped">
                                        <div class="form-body">
                                            @if (update)
                                            {                                        

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Aksesuar.IsPassive, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-6">
                                                        @Html.DropDownList("Aksesuar.IsPassive", MyHtmlHelpers.SelectListForBoolean(Model.Aksesuar.IsPassive), "Please Select", htmlAttributes: new { @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(model => model.Aksesuar.IsPassive, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Aksesuar.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-6">
                                                        <input type="text"
                                                               readonly
                                                               class="form-control transform_none"
                                                               id="Aksesuar_Id"
                                                               value="@Model.Aksesuar.Id" />
                                                    </div>
                                                </div>
                                            }

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Aksesuar.ZetaCodePrevious
                                           , htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.Aksesuar.ZetaCodePrevious
                                                        , new { htmlAttributes = new { @class = "form-control transform_none" } })
                                                    @Html.ValidationMessageFor(model => model.Aksesuar.ZetaCodePrevious
                                                         , "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Aksesuar.Master, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-6">
                                                    @Html.DropDownList("Aksesuar.Master", MyHtmlHelpers.SelectListForBoolean(Model.Aksesuar.Master), "Please Select", htmlAttributes: new { @class = "form-control select2" })
                                                    @Html.ValidationMessageFor(model => model.Aksesuar.Master, "", new { @class = "text-danger" })
                                                </div>
                                            </div>



                                            @if (!update)
                                            {
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Aksesuar.CompanyId
                                               , "Blue Cod Name"
                                               , htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-6">
                                                        @Html.DropDownList("Aksesuar.CompanyId"
                                                            , Model.Collections.Sirketler, "Please Select"
                                                            , htmlAttributes: new { @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(model => model.Aksesuar.CompanyId
                                                   , "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <input type="hidden" name="Aksesuar.CompanyId"
                                                       id="Aksesuar_CompanyId"
                                                       value="@Model.Aksesuar.CompanyId" />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Aksesuar.CompanyId
                                               , "Blue Cod Name"
                                               , htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-6">
                                                        <input type="text"
                                                               class="form-control"
                                                               readonly
                                                               value="@(Model.Company.Code + " " + Model.Company.Name)" />
                                                    </div>
                                                </div>
                                            }


                                            @if (update)
                                            {

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Aksesuar.BlueSiparisNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.Aksesuar.BlueSiparisNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                        @Html.ValidationMessageFor(model => model.Aksesuar.BlueSiparisNo, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            }





                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Ulke, "Ürün Menşei", htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-6">
                                                    @Html.DropDownList("Ulke"
    , Model.Collections.Ulkeler, "Please Select"
    , htmlAttributes: new { @class = "form-control select2" })
                                                    @Html.ValidationMessageFor(model => model.Ulke, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            @*<div class="form-group">
                                                    @Html.LabelFor(model => model.Aksesuar.Ea, "Ea İplik No", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-6">
                                                        @Html.DropDownList("Aksesuar.Ea"
        , new SelectList(Model.Collections.EaIpliNolar,"Value","Text"), "Please Select"
        , htmlAttributes: new { @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(model => model.Aksesuar.Ea, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>*@


                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Aksesuar.BlueUrunKodIsmi, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.Aksesuar.BlueUrunKodIsmi, new { htmlAttributes = new { @class = "form-control transform_none" } })
                                                    @Html.ValidationMessageFor(model => model.Aksesuar.BlueUrunKodIsmi, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion1" href="#collapse_urun_komposizyonu"> Ürün Komposizyonu  </a>
                        </h4>
                    </div>
                    <div id="collapse_urun_komposizyonu" class="panel-collapse collapse">
                        <div class="panel-body">
                            <div class="form-horizontal form-bordered form-row-stripped">
                                <div class="form-body">
                                    @Html.EditorFor(model => model.Aksesuar.En, "MyTouchSpin")
                                    @Html.EditorFor(model => model.Aksesuar.Boy, "MyTouchSpin")
                                    @Html.EditorFor(model => model.Aksesuar.Gram, "MyTouchSpin")

                                    <div class="form-group">
                                        <label class="control-label col-md-2" for="normal_iplik_count">Kaç Kumaş Örme Dokumadan Oluşuyor</label>
                                        <div class="col-md-6">
                                            @{

                                                var normalIplikCount = 0;
                                            }
                                            <select id="normal_iplik_count" class="form-control">
                                                <option value="">Please Select</option>
                                                <option @(normalIplikCount == 1 ? "selected" : "") value="1">1</option>
                                                <option @(normalIplikCount == 2 ? "selected" : "") value="2">2</option>
                                                <option @(normalIplikCount == 3 ? "selected" : "") value="3">3</option>
                                                <option @(normalIplikCount == 4 ? "selected" : "") value="4">4</option>
                                                <option @(normalIplikCount == 5 ? "selected" : "") value="5">5</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="mt-repeater">
                                        <div data-repeater-list="AksesuarKompozisyonlar">
                                            @{
                                                for (int i = 0; i < Model.AksesuarKompozisyonlar.Count; i++)
                                                {
                                                    <text>
                                                        <div data-repeater-item>
                                                            <div class="mt-repeater-item">
                                                                <div class="form-group">
                                                                    <label class="control-label col-md-2" for=""></label>
                                                                    <div class="col-md-4">
                                                                        @Html.DropDownList("UrunKompozisyonId", selectList: new SelectList(Model.Collections.UrunKompozisyonlar, "Id", "Name"),optionLabel:"Please Select", htmlAttributes: new { @class = "form-control select2" })
                                                                    </div>
                                                                    <div class="col-md-4">
                                                                        @Html.DropDownList("YuzdeOrani", selectList: Enumerable.Empty<SelectListItem>(), htmlAttributes: new { @class = "form-control select2 yuzde_orani" })
                                                                    </div>
                                                                    <div class="col-md-2">
                                                                        <a href="javascript:;" data-repeater-delete class="btn btn-danger mt-repeater-delete" style="margin-top: 0;">
                                                                            <i class="fa fa-close"></i> Delete
                                                                        </a>
                                                                    </div>
                                                                </div>
                                                                <div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </text>
                                                }
                                            }
                                        </div>
                                        <a href="javascript:;" data-repeater-create class="btn btn-default mt-repeater-add">
                                            <i class="fa fa-plus"></i> Add
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>





                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion1" href="#collapse_renkler"> Renk </a>
                        </h4>
                    </div>
                    <div id="collapse_renkler" class="panel-collapse collapse">
                        <div class="panel-body">
                            <div class="form-horizontal form-bordered form-row-stripped">
                                <div class="form-body">

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Aksesuar.PantoneId, "Pantone Renkle", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-6">
                                            @Html.DropDownList("Aksesuar.PantoneId"
                                               , new SelectList(Model.Collections.PantoneRenkler, "Value", "Text", Model.Aksesuar.PantoneId.HasValue ? Model.Aksesuar.PantoneId.ToString() : "")
                                               , "Please Select"
                                               , htmlAttributes: new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.Aksesuar.PantoneId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Aksesuar.Renkid, "Renkler", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.DropDownList("Aksesuar.Renkid"
                                            , new SelectList(Model.Collections.Renkler, "Value", "Text", Model.Aksesuar.Renkid.HasValue ? Model.Aksesuar.Renkid.ToString() : "")
                                            , "Please Select"
                                            , htmlAttributes: new { @class = "form-control select2", @onchange = "setHtmlColorCode($(this))" })
                                            @Html.ValidationMessageFor(model => model.Aksesuar.Renkid, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-3">
                                            <button type="button" class="btn btn-default btn-block" id="renkidhtml">&nbsp;</button>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion1" href="#collapse_rafyerleri"> Raf Yerleri </a>
                        </h4>
                    </div>
                    <div id="collapse_rafyerleri" class="panel-collapse collapse">
                        <div class="form-horizontal form-bordered form-row-stripped">
                            <div class="form-body">
                                <div class="panel-body">

                                    @*<div class="form-group">
                                        @Html.LabelFor(model => model.Aksesuar.KumasGoruntuId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-6">
                                            @Html.DropDownList("Aksesuar.KumasGoruntuId"
                                                       , new SelectList(Model.Collections.KumasGoruntuleri, "Value", "Text", Model.Aksesuar.KumasGoruntuId.HasValue ? Model.Aksesuar.KumasGoruntuId.ToString() : "")
                                                       , "Please Select"
                                                       , new { @class = "form-control select2" })
                                        </div>
                                    </div>*@

                                    @*<div class="form-group">
                                @Html.LabelFor(model => model.Aksesuar.KoleksiyonKategoriId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    <div class="panel panel-default">
                                        <div class="panel-body">
                                            @Html.HiddenFor(model => model.Aksesuar.KoleksiyonKategoriId)
                                            @Html.TextBoxFor(model => model.Aksesuar.KoleksiyonKategori.Name, new { @class = "form-control" })
                                            <br />
                                            <div id="treeKoleksiyonKategorileri"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>*@

                                    <div class="form-group">
                                        @Html.LabelFor(x => x.Aksesuar.RafyeriTurkiyeId, new { @class = "control-label col-md-2" })
                                        <div class="col-md-6">
                                            <div class="panel panel-default">
                                                <div class="panel-body" style="height:150px; overflow-y:auto;">
                                                    @Html.HiddenFor(x => x.Aksesuar.RafyeriTurkiyeId)
                                                    @Html.TextBoxFor(x => x.RafyeriTurkiye.Name, new { @class = "form-control" })
                                                    <br />
                                                    <div id="treeRafyeriTurkiye">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(x => x.Aksesuar.RafyeriYunanistanId, new { @class = "control-label col-md-2" })
                                        <div class="col-md-6">
                                            <div class="panel panel-default">
                                                <div class="panel-body" style="height:150px; overflow-y:auto;">
                                                    @Html.HiddenFor(x => x.Aksesuar.RafyeriYunanistanId)
                                                    @Html.TextBoxFor(x => x.RafyeriYunanistan.Name, new { @class = "form-control" })
                                                    <br />
                                                    <div id="treeRafyeriYunanistan">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="form-horizontal form-bordered form-row-stripped">
                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-2">
                                        <button type="submit" onclick="validateSomeFields(event)" class="btn green btn-block">
                                            @*<i class="fa fa-pencil"></i>*@ Submit
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</form>

@section afterGlobalScripts
{
    @*<script src="~/Content/global/plugins/ion.rangeslider/js/ion.rangeSlider.min.js" type="text/javascript"></script>*@

    @*<script src="~/Content/global/plugins/nouislider/wNumb.min.js" type="text/javascript"></script>
        <script src="~/Content/global/plugins/nouislider/nouislider.min.js" type="text/javascript"></script>*@

    <script src="~/Content/global/plugins/fuelux/js/spinner.min.js" type="text/javascript"></script>
    <script src="~/Content/global/plugins/bootstrap-touchspin/bootstrap.touchspin.js" type="text/javascript"></script>
    <script src="~/Content/noUiSlider/wNumb.js"></script>
    <script src="~/Content/noUiSlider/nouislider.min.js"></script>
    <script src="~/Scripts/ComponentsNoUiSliders.js"></script>
    <script>


        function validateSomeFields(event) {
            
            var yuzdeOrani = $('.yuzde_orani option:selected');
            var yuzdeOraniToplam = 0;
            for (var i = 0; i < yuzdeOrani.length; i++) {
                debugger;
                yuzdeOraniToplam += parseInt($(yuzdeOrani[i]).val());
            }
            if (yuzdeOraniToplam !== 100) {
                alert("Toplam %100 olmalıdır");
                debugger;
                event.preventDefault();
                event.stopPropagation();
                return false;
            }
        }



        var modulKumasOrmeDokuma = (function () {

            var ajaxTreeFillTermTree = function (selector, url, valueElement, textElement, multiple, parentContainer, checkbox) {
                var tmp = $(selector).jstree(true);
                if (tmp) {
                    tmp.destroy();
                }

                if (typeof parentContainer === "undefined") {
                    parentContainer = ".panel-body";
                }

                if (typeof multiple === "undefined") {
                    multiple = false;
                }

                if (typeof checkbox === "undefined" || checkbox === null) {
                    checkbox = {
                        'keep_selected_style': false,
                        'three_state': false,
                        'cascade': ''
                    };
                }

                $(selector).jstree({
                    'plugins': ['search', 'checkbox', 'wholerow'],
                    'core': {
                        "multiple": multiple,
                        'data': {
                            'url': function (node) {
                                return url;
                            }
                            //,
                            //'data': function (node) {
                            //    //console.log(node);

                            //    return { 'parent': node.id };
                            //}
                        },
                        'animation': false,
                        //'expand_selected_onload': true,
                        'themes': {
                            'icons': false,
                        }
                    },
                    'search': {
                        'show_only_matches': true,
                        'show_only_matches_children': true
                    },
                    'checkbox': checkbox
                });

                $(selector).on('changed.jstree',
                    function (e, data) {
                        var i, j, ids = [], texts = [];
                        for (i = 0, j = data.selected.length; i < j; i++) {
                            var node = data.instance.get_node(data.selected[i]);
                            ids.push(node.id);
                            texts.push(node.text);
                        }
                        debugger;
                        var valueElyafCinsiKalitesi = $(selector).closest(parentContainer).find(valueElement);
                        valueElyafCinsiKalitesi.empty();
                        $(valueElyafCinsiKalitesi).val(ids.join(', '));

                        var txtElyafCinsiKalitesi = $(selector).closest(parentContainer).find(textElement);
                        txtElyafCinsiKalitesi.empty();
                        $(txtElyafCinsiKalitesi).val(texts.join(', '));

                        //$(txtElyafCinsiKalitesi).val(texts.join(', '));


                        if (typeof changedCallBackFunc !== 'undefined' && changedCallBackFunc !== null) {
                            changedCallBackFunc();
                        }



                    });
            };

            return {

                ajaxTreeFillTermTree: ajaxTreeFillTermTree

            };

        })();


        function setHtmlColorCode(dll) {
            var htmlColorText = dll.find("option:selected").val();
            if (htmlColorText.length > 0) {
                dll.closest(".form-group").find("#renkidhtml").css('background-color', htmlColorText.split("|")[1]);
            }
        }








        function getOrguDetaylari(dll) {
            if ($(dll).val().length > 0) {

                var mycheckbox = {
                    'keep_selected_style': true,
                    'three_state': true,
                    'cascade': 'up'
                };

                if ($(dll).val() === "26") {
                    //Örgü Detayları - Örme Düz
                    modulKumasOrmeDokuma.ajaxTreeFillTermTree("#treeOrguDetaylari"
                        , "/ZetaCodeNormalIplik/JSTreeOrguDetaylariOrmeDuz"
                        , "#Aksesuar_OrguDetaylariIds"
                        , "#Aksesuar_OrguDetaylari", false, ".form-group", mycheckbox);
                } else if ($(dll).val() === "45"){
                    //Örgü Detayları - Örme Yuvarlak
                    modulKumasOrmeDokuma.ajaxTreeFillTermTree("#treeOrguDetaylari"
                        , "/ZetaCodeNormalIplik/JSTreeOrguDetaylariOrmeYuvarlak"
                        , "#Aksesuar_OrguDetaylariIds"
                        , "#Aksesuar_OrguDetaylari", false, ".form-group", mycheckbox);
                }
                else if ($(dll).val() === "46") {
                     //Örgü Detayları - Örme Çözgülü
                    modulKumasOrmeDokuma.ajaxTreeFillTermTree("#treeOrguDetaylari"
                        , "/ZetaCodeNormalIplik/JSTreeOrguDetaylariOrmeCozgulu"
                        , "#Aksesuar_OrguDetaylariIds"
                        , "#Aksesuar_OrguDetaylari", false, ".form-group", mycheckbox);

                }
                else if ($(dll).val() === "47") {
                    //Örgü Detayları - Dokuma
                    modulKumasOrmeDokuma.ajaxTreeFillTermTree("#treeOrguDetaylari"
                        , "/ZetaCodeNormalIplik/JSTreeOrguDetaylariDokuma"
                        , "#Aksesuar_OrguDetaylariIds"
                        , "#Aksesuar_OrguDetaylari", false, ".form-group", mycheckbox);
                }
                else if ($(dll).val() === "48") {
                    //Örgü Detayları - Nonwoven
                    modulKumasOrmeDokuma.ajaxTreeFillTermTree("#treeOrguDetaylari"
                        , "/ZetaCodeNormalIplik/JSTreeOrguDetaylariNonwoven"
                        , "#Aksesuar_OrguDetaylariIds"
                        , "#Aksesuar_OrguDetaylari", false, ".form-group", mycheckbox);
                }
            }
        }

        
        var repeater = function () {
            $('.mt-repeater').each(function () {
                $(this).repeater({
                    show: function () {

                        var yuzdeOrani = $('.yuzde_orani option:selected');
                        debugger;
                        var yuzdeOraniToplam = 0;
                        for (var i = 0; i < yuzdeOrani.length; i++) {
                            debugger;
                            yuzdeOraniToplam += parseInt($(yuzdeOrani[i]).val());
                        }
                        if (yuzdeOraniToplam > 100) {
                            alert("Toplam %100 olmalıdır");
                            $(this).remove();
                            return;
                        }


                        $(this).slideDown();

                        //ajaxTreeFillTermTreeRef($(this).find(".treeElyafCinsiKalitesi"), "/ZetaCodeNormalIplik/JSTreeElyafCinsiveKalitesi");

                        //modulFantezilIplikVm.ajaxTreeFillTermTree("#treeElyafCinsiKalitesi", "/ZetaCodeNormalIplik/JSTreeElyafCinsiveKalitesi");



                        $('.mt-repeater .select2-container').remove();

                        $(".mt-repeater .select2").each(function () {

                            $(this).select2({
                                placeholder: "Please Select",
                                width: null
                            });


                        });

                        debugger;
                        if ($('.mt-repeater .mt-repeater-item').length > parseInt(($("#normal_iplik_count").val() || 0))) {
                            alert("En fazla " + $("#normal_iplik_count").val() + " adet normal iplik seçilebilir");
                            $(this).remove();                            
                            return false;
                        }
                      

                        $('.mt-repeater .select2-container').css('width', '100%');


                    

                        if ($(this).find('.yuzde_orani option').length === 0) {
                            for (var i = 0; i < 100; i++) {
                                $('.yuzde_orani').append('<option value="' + i + '">' + i + '</option>')
                            }
                        }                    


                    },

                    hide: function (deleteElement) {
                        if (confirm('Are you sure you want to delete this element?')) {
                            $(this).slideUp(deleteElement);
                        }
                    },

                    ready: function (setIndexes) {


                    },
                    isFirstItemUndeletable: false

                });
            })
        };

        jQuery(document).ready(function () {


            setTimeout(function () {

                if ($('.yuzde_orani option').length === 0) {
                    for (var i = 0; i < 100; i++) {
                        $('.yuzde_orani').append('<option value="' + i + '">' + i + '</option>')
                    }
                }              

            }, 100)
          


            repeater();
            ComponentsNoUiSliders.myNoUiSlidersStater("#Aksesuar_En", 0.1, 150, 0.1,false,2);
            ComponentsNoUiSliders.myNoUiSlidersStater("#Aksesuar_Boy", 0.1, 150, 0.1,false, 2);
            ComponentsNoUiSliders.myNoUiSlidersStater("#Aksesuar_Gram", 0.1, 1000, 0.1, false, 2);
   



            modulKumasOrmeDokuma.ajaxTreeFillTermTree("#treeKoleksiyonKategorileri"
                , "/ZetaCodeNormalIplik/JSTreeKoleksiyonKategorileri"
                , "#Aksesuar_KoleksiyonKategoriId"
                , "#Aksesuar_KoleksiyonKategori_Name");

            modulKumasOrmeDokuma.ajaxTreeFillTermTree("#treeRafyeriTurkiye"
                , "/ZetaCodeNormalIplik/JSTreeRafyeriTurkiyeId"
                , "#Aksesuar_RafyeriTurkiyeId"
                , "#Aksesuar_RafyeriTurkiye_Name");

            modulKumasOrmeDokuma.ajaxTreeFillTermTree("#treeRafyeriYunanistan"
                , "/ZetaCodeNormalIplik/JSTreeRafyeriYunanistanId"
                , "#Aksesuar_RafyeriYunanistanId"
                , "#Aksesuar_RafyeriYunanistan_Name");


            modulKumasOrmeDokuma.ajaxTreeFillTermTree("#treeBoyaIslemleri"
                , "/ZetaCodeNormalIplik/JSTreeBoyaIslemleri"
                , "#Aksesuar_BoyaIslemleriIds"
                , "#Aksesuar_BoyaIslemleri", true, ".form-group");


            modulKumasOrmeDokuma.ajaxTreeFillTermTree("#treeAksesuarlar"
                , "/ZetaCodeNormalIplik/JSTreeAksesuarlar"
                , "#Aksesuar_AksesuarIds"
                , "#Aksesuar_Aksesuarlar", true, ".form-group");

            modulKumasOrmeDokuma.ajaxTreeFillTermTree("#treeMakineMarkalar"
                , "/ZetaCodeNormalIplik/JSTreeMakineMarkalar"
                , "#Aksesuar_MakineMarkaId"
                , "#Aksesuar_MakineMarkasi_Name", false, ".form-group");

            modulKumasOrmeDokuma.ajaxTreeFillTermTree("#treeMakineModeller"
                , "/ZetaCodeNormalIplik/JSTreeMakineModeller"
                , "#Aksesuar_MakineModelId"
                , "#Aksesuar_MakineModeli_Name", false, ".form-group");

        });
    </script>
}