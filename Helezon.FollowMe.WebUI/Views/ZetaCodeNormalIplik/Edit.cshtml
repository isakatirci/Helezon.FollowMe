@model Helezon.FollowMe.WebUI.Models.ViewModels.ZetaCodeNormalIplikEditVm

@{
    ViewBag.Title = "";
    var update = Model != null && Model.NormalIplik != null && Model.NormalIplik.Id > 0;
    Layout = "~/Views/Shared/_LayoutZetaCode.cshtml";
}


<form action="/ZetaCodeNormalIplik/Edit" id="frmZetaCodeNormalIplik" method="post">
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.NormalIplik.Id)
    @Html.HiddenFor(model => model.NormalIplik.ZetaCode)

    <div class="portlet box green">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-gift"></i>Zeta Code Normal İplik [Create or Edit Page]
            </div>
            <div class="tools">
            </div>
        </div>
        <div class="portlet-body">
            <div class="panel-group accordion" id="accordion1">




                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion1" href="#collapse_1"> Group #1 </a>
                        </h4>
                    </div>
                    <div id="collapse_1" class="panel-collapse in">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-horizontal form-bordered form-row-stripped">
                                        <div class="form-body">
                                            @if (update)
                                            {
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.NormalIplik.IsPassive, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-6">
                                                        @Html.DropDownList("NormalIplik.IsPassive", MyHtmlHelpers.SelectListForBoolean(Model.NormalIplik.IsPassive), "Please Select", htmlAttributes: new { @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(model => model.NormalIplik.IsPassive, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.NormalIplik.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.NormalIplik.Id, new { htmlAttributes = new { @class = "form-control transform_none", @readonly = "readonly" } })
                                                        @Html.ValidationMessageFor(model => model.NormalIplik.Id, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            }

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.NormalIplik.ZetaCodePrevious, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.NormalIplik.ZetaCodePrevious, new { htmlAttributes = new { @class = "form-control transform_none" } })
                                                    @Html.ValidationMessageFor(model => model.NormalIplik.ZetaCodePrevious, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.NormalIplik.Master, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-6">
                                                    @Html.DropDownList("NormalIplik.Master", MyHtmlHelpers.SelectListForBoolean(Model.NormalIplik.Master), "Please Select", htmlAttributes: new { @class = "form-control select2" })
                                                    @Html.ValidationMessageFor(model => model.NormalIplik.Master, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            @if (!update)
                                            {
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.NormalIplik.SirketId, "Blue Cod Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-6">
                                                        @Html.DropDownList("NormalIplik.SirketId",new SelectList(Model.Collections.Sirketler, dataValueField:"Id",dataTextField : "Name", selectedValue: @Model.NormalIplik.SirketId), "Please Select", htmlAttributes: new { @class = "form-control select2"})
                                                        @Html.ValidationMessageFor(model => model.NormalIplik.SirketId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <input type="hidden" name="NormalIplik.SirketId" id="NormalIplik_SirketId" value="@Model.NormalIplik.SirketId" />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.NormalIplik.SirketId, "Blue Cod Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-6">
                                                        <input type="text" class="form-control" readonly value="@(Model.Company.Code + " " + Model.Company.Name)" />
                                                    </div>
                                                </div>
                                            }


                                            @if (update)
                                            {

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.NormalIplik.BlueSiparisNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.NormalIplik.BlueSiparisNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                        @Html.ValidationMessageFor(model => model.NormalIplik.BlueSiparisNo, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            }


                                            <div class="form-group">
                                                @Html.LabelFor(model => model.NormalIplik.UlkeId, "Ürün Menşei", htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-6">
                                                    @Html.DropDownList("NormalIplik.UlkeId", new SelectList(Model.Collections.Ulkeler, dataTextField: "Name", dataValueField: "Id", selectedValue: @Model.NormalIplik.UlkeId), "Please Select", htmlAttributes: new { @class = "form-control select2" })
                                                    @Html.ValidationMessageFor(model => model.NormalIplik.UlkeId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.NormalIplik.BlueUrunKodIsmi, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.NormalIplik.BlueUrunKodIsmi, new { htmlAttributes = new { @class = "form-control transform_none" } })
                                                    @Html.ValidationMessageFor(model => model.NormalIplik.BlueUrunKodIsmi, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.IplikKategosi.Id, "İplik Kategorisi", htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-6">
                                                    <div class="panel panel-default">
                                                        <div class="panel-body">
                                                            <input type="hidden"
                                                                   name="IplikKategosi.Id"
                                                                   id="IplikKategosi_Id"
                                                                   value="@Model.IplikKategosi.Id" />
                                                            <input type="text"
                                                                   name="IplikKategosi.Name"
                                                                   id="IplikKategosi_Name"
                                                                   readonly
                                                                   class="form-control"
                                                                   value="@Model.IplikKategosi.Name" />
                                                            <br />
                                                            <div id="treeIplikKategosiId"></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>



                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-horizontal iplik_kategori_forms">
                                        <div class="form-body" id="placeholderPartialIplikKategori">

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion1" href="#collapse_33"> İPLİK NO VE ÜRETİM TEKNOLOJİSİ </a>
                        </h4>
                    </div>
                    <div id="collapse_33" class="panel-collapse in">
                        <div class="panel-body">
                            <div class="portlet box red">
                                <div class="portlet-title">
                                    <div class="caption">
                                        <i class="fa fa-gift"></i> İPLİK NO VE ÜRETİM TEKNOLOJİSİ
                                    </div>
                                    <div class="tools">

                                    </div>
                                </div>
                                <div class="portlet-body form">
                                    <div class="form-body">
                                        <div class="form-group iplik_no_group">
                                            <div class="row">
                                                <div class="col-md-3">
                                                    <label class="control-label">Üretim Teknolojisi</label>
                                                    <br />
                                                    @Html.DropDownList("NormalIplik.UretimTeknolojisiId"
                                                   , Model.Collections.UretimTeknolojileri,"Please Select"
                                                   , htmlAttributes: new { @class = "form-control select2" })
                                                    @Html.ValidationMessageFor(model => model.NormalIplik.UretimTeknolojisiId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-3">
                                                    <label class="control-label">İplik No Cinsi</label>
                                                    <br />
                                                    <select id="NormalIplik_IplikNoCinsi" onchange="javascript:setVisibleIplikNo($(this))"  name="NormalIplik.IplikNoCinsi" class="form-control">
                                                        <option value="">Please Select</option>
                                                        <option  @(Model?.NormalIplik.IplikNoCinsi == "NE" ? "selected" : string.Empty ) value="NE">NE</option>
                                                        <option  @(Model?.NormalIplik.IplikNoCinsi == "NM" ? "selected" : string.Empty ) value="NM">NM</option>
                                                        <option @(Model?.NormalIplik.IplikNoCinsi == "DNY" ? "selected" : string.Empty ) value="DNY">DNY</option>
                                                    </select>
                                                </div>
                                                <div class="col-md-3 ne_iplik_no" style="display: none;">
                                                    <label class="control-label">NE</label>
                                                    <br />
                                                    @Html.Raw(Model.NE(Model.NormalIplik.Ne))
                                                </div>
                                                <div class="col-md-3 nm_iplik_no" style="display: none;">
                                                    <label class="control-label">NM</label>
                                                    <br />
                                                    @Html.Raw(Model.NM(Model.NormalIplik.Nm))
                                                </div>
                                                <div class="col-md-3 dny_iplik_no" style="display: none;">
                                                    <label class="control-label">DNY</label>
                                                    <br />
                                                    @Html.Raw(Model.DYN(Model.NormalIplik.Dny))
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-3 fl_iplik_no" style="display: none;">
                                                    <label class="control-label">FL</label>
                                                    <br />
                                                    @Html.Raw(Model.FL(Model.NormalIplik.Fl))
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion1" href="#collapse_3"> İPLİK ELYAF CİNSİ VE ORANI </a>
                        </h4>
                    </div>
                    <div id="collapse_3" class="panel-collapse in">
                        <div class="panel-body">
                            <div class="portlet box red">
                                <div class="portlet-title">
                                    <div class="caption">
                                        <i class="fa fa-gift"></i> Elyaf Cinsi - Kalitesi - Parlaklık
                                    </div>
                                    <div class="tools">

                                    </div>
                                </div>
                                <div class="portlet-body form">
                                    <div class="form-body">
                                        <div class="form-group">
                                            <div class="mt-repeater form-horizontal">
                                                <div data-repeater-list="IplikNolar">
                                                    @{
                                                        for (int i =0;i< Model.IplikNolar.Count;i++)
                                                        {

                                                            
                                                            <text>
                                                                <div data-repeater-item>
                                                                    <div class="mt-repeater-item">
                                                                        <div class="row">
                                                                            <div class="col-md-3" style="height:200px; overflow-y:auto;">
                                                                                <div class="panel panel-default">
                                                                                    <div class="panel-body" id="iplik_no@(i)">
                                                                                        <label class="control-label">Elyaf Cinsi Kalitesi</label>
                                                                                        <input type="hidden"
                                                                                               id="Id"
                                                                                               name="Id"
                                                                                               value="@Model.IplikNolar[i].Id" />
                                                                                        <input type="hidden"
                                                                                               id="TermId"
                                                                                               name="TermId"
                                                                                               value="@Model.IplikNolar[i].TermId" />
                                                                                        <br />
                                                                                        <input type="text"
                                                                                               name="TermName"
                                                                                               id="TermName"
                                                                                               class="form-control"
                                                                                               readonly
                                                                                               value="@Model.IplikNolar[i].TermName" />
                                                                                        <br />
                                                                                        <div class="treeElyafCinsiKalitesi"></div>
                                                                                    </div>
                                                                                </div>                                                                                   
                                                                                    </div>
                                                                                    <div class="col-md-9">
                                                                                        <div class="row">
                                                                                            <div class="col-md-4">
                                                                                                <label class="control-label">Elyaf Oranı</label>
                                                                                                <br />
                                                                                                @Html.Raw(Model.ElyafOrani(Model.IplikNolar[i].ElyafOrani))
                                                                                            </div>
                                                                                            <div class="col-md-2">
                                                                                                <a href="javascript:;" data-repeater-delete class="btn btn-danger mt-repeater-delete">
                                                                                                    <i class="fa fa-close"></i> Delete
                                                                                                </a>
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>

                                                                                </div>
                                                                            </div>

                                                                </div>
                                                                <hr />
                                                            </text>
                                                        }

                                                    }



                                                </div>
                                                <a href="javascript:;" data-repeater-create class="btn btn-success mt-repeater-add">
                                                    <i class="fa fa-plus"></i> Add
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion1" href="#collapse_renkler"> Renk </a>
                        </h4>
                    </div>
                    <div id="collapse_renkler" class="panel-collapse collapse">
                        <div class="panel-body">
                            <div class="form-horizontal form-bordered form-row-stripped">
                                <div class="form-body">

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NormalIplik.PantoneId, "Pantone Renkle", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-6">
                                            @Html.DropDownList("NormalIplik.PantoneId", Model.Collections.PantoneRenkleri
                                           , "Please Select"
                                           , htmlAttributes: new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.NormalIplik.PantoneId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NormalIplik.Renkid, "Renkler", htmlAttributes: new { @class = "control-label col-md-2" })

                                        <div class="col-md-3">
                                            @Html.DropDownList("RenkIdHtmlKod", new SelectList(Model.Collections.Renkler, dataValueField:"Value",  dataTextField: "Text",  selectedValue: Model.Renk.Id +"|" + Model.Renk.HtmlKod)
                                         , "Please Select"
                                         , htmlAttributes: new { @class = "form-control select2 ", @onchange= "setHtmlColorCode($(this))" })
                                            @Html.ValidationMessageFor(model => model.NormalIplik.PantoneId, "", new { @class = "text-danger" })
                                            @Html.ValidationMessageFor(model => model.NormalIplik.Renkid, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-3">
                                            <button type="button" class="btn btn-default btn-block" id="renkidhtml">&nbsp;</button>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion1" href="#collapse_rafyerleri"> Raf Yerleri </a>
                        </h4>
                    </div>
                    <div id="collapse_rafyerleri" class="panel-collapse collapse">
                        <div class="form-horizontal form-bordered form-row-stripped">
                            <div class="form-body">
                                <div class="panel-body">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.RafyeriTurkiye.Id, "Rafyeri Türkiye", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-6">
                                            <div class="panel panel-default">
                                                <div class="panel-body" style="height:200px; overflow-y:auto;">
                                                    <input type="hidden"
                                                           name="RafyeriTurkiye.Id"
                                                           id="RafyeriTurkiye_Id"
                                                           value="@Model.RafyeriTurkiye.Id" />
                                                    <input type="text"
                                                           name="RafyeriTurkiye.Name"
                                                           id="RafyeriTurkiye_Name"
                                                           readonly
                                                           class="form-control"
                                                           value="@Model.RafyeriTurkiye.Name" />
                                                    <br />
                                                    <div id="treeRafyeriTurkiyeId">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.RafyeriYunanistan.Id, "Rafyeri Yunanistan", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-6">
                                            <div class="panel panel-default">
                                                <div class="panel-body" style="height:200px; overflow-y:auto;">
                                                    <input type="hidden"
                                                           name="RafyeriYunanistan.Id"
                                                           id="RafyeriYunanistan_Id"
                                                           value="@Model.RafyeriYunanistan.Id" />
                                                    <input type="text"
                                                           name="RafyeriYunanistan.Name"
                                                           id="RafyeriYunanistan_Name"
                                                           class="form-control"
                                                           readonly
                                                           value="@Model.RafyeriYunanistan.Name" />
                                                    <br />
                                                    <div id="treeRafyeriYunanistanId">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="form-horizontal form-bordered form-row-stripped">
                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-2">
                                        <button type="submit" onclick="validateSomeFields()" class="btn green btn-block">
                                            @*<i class="fa fa-pencil"></i>*@ Submit
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</form>


@section afterGlobalScripts {



    <script>

        function doAsync(callback) {
            setTimeout(function () { callback(); }, 2000);
        }

        function setVisibleIplikNo(dll) {
            var self = $(dll);
            if (self.val().length > 0) {
                var iplikNo = self.val();
                if (iplikNo === "NE") {
                    self.closest(".row").find(".ne_iplik_no").show();
                    self.closest(".row").find(".dny_iplik_no").hide();
                    self.closest(".row").find(".nm_iplik_no").hide();
                    self.closest(".iplik_no_group").find(".fl_iplik_no").hide();
                    
                } else if (iplikNo === "DNY") {
                    self.closest(".row").find(".ne_iplik_no").hide();
                    self.closest(".row").find(".dny_iplik_no").show();
                    self.closest(".row").find(".nm_iplik_no").hide();
                    self.closest(".iplik_no_group").find(".fl_iplik_no").show();
                } else if (iplikNo === "NM") {
                    self.closest(".row").find(".ne_iplik_no").hide();
                    self.closest(".row").find(".dny_iplik_no").hide();
                    self.closest(".row").find(".nm_iplik_no").show();
                    self.closest(".iplik_no_group").find(".fl_iplik_no").hide();
                }              
            } else {
                self.closest(".row").find(".ne_iplik_no").hide();
                self.closest(".row").find(".dny_iplik_no").hide();
                self.closest(".row").find(".nm_iplik_no").hide();
                self.closest(".iplik_no_group").find(".fl_iplik_no").hide();
            }  
        }
        
        

        function elyafOraniCalculate() {

        }

        $("#frmZetaCodeNormalIplik").submit(function (event) {

            var elyafOrani = 0;
            var iplikKategoriErrors = [];
            $(".iplik_kategori_forms .form-control").each(function () {
                var self = this;
                if ($(this).val().length < 1)
                {
                    iplikKategoriErrors.push($(self).attr("name") + " Doldurulması Zorunludur");
                 
                }
            });

            if (iplikKategoriErrors.length > 0) {
                alert(iplikKategoriErrors.join(", "));
                event.preventDefault();
                return;
            }

            //
            $(".mt-repeater .elyaf-orani").each(function () {
                var self = this;
                if ($(this).val().length > 0) {
                    elyafOrani += parseInt($(this).val());
                } else {
                    alert("Elyaf Oranı Seçiniz");
                    event.preventDefault();
                    return;
                }
            });

            if (elyafOrani != 100) {
                alert("Elyaf Oranı %100 Olmalıdır");
                event.preventDefault();
            }
            //if (($("#NormalIplik_BlueSiparisNo").val() * 1) < 1) {
            //    alert("Sipariş  No Oluşturulamadı");
            //    event.preventDefault();
            //}

        });

        function setHtmlColorCode(dll) {
            if (dll) {
                var htmlColorText = dll.find("option:selected").val();
                if (htmlColorText && htmlColorText.length > 0) {
                    dll.closest(".form-group").find("#renkidhtml").css('background-color', htmlColorText.split("|")[1]);
                }
            }            
        }

        //$("#repeater-button").click(function () {
        //    $('.mt-repeater .select2-container').remove();
        //    $(".mt-repeater .select2").select2({
        //        placeholder: "Please Select",
        //        width: null
        //    });
        //})

        var modulZetaCodeNormalIplikVm = (function () {

            var ajaxTreeFillTermTree = function (selector, url, valueElement, textElement,changedCallBackFunc) {
                var tmp = $(selector).jstree(true);
                if (tmp) {
                    tmp.destroy();
                }
                $(selector).jstree({
                    'plugins': ['search', 'checkbox', 'wholerow'],
                    'core': {
                        "multiple": false,
                        'data': {
                            'url': function (node) {
                                return url;
                            }
                            //,
                            //'data': function (node) {
                            //    //console.log(node);

                            //    return { 'parent': node.id };
                            //}
                        },
                        'animation': false,
                        //'expand_selected_onload': true,
                        'themes': {
                            'icons': false,
                        }
                    },
                    'search': {
                        'show_only_matches': true,
                        'show_only_matches_children': true
                    },
                    'checkbox': {
                        'keep_selected_style': false,
                        'three_state': false,
                        'cascade': ''
                    }
                });

                $(selector).on('changed.jstree',
                    function (e, data) {
                        var i, j, ids = [], texts = [];
                        for (i = 0, j = data.selected.length; i < j; i++) {
                            var node = data.instance.get_node(data.selected[i]);
                            ids.push(node.id);
                            texts.push(node.text);
                        }

                        var valueElyafCinsiKalitesi = $(selector).closest(".panel-body").find(valueElement);
                        valueElyafCinsiKalitesi.empty();
                        $(valueElyafCinsiKalitesi).val(ids.join(', '));

                        var txtElyafCinsiKalitesi = $(selector).closest(".panel-body").find(textElement);
                        txtElyafCinsiKalitesi.empty();
                        $(txtElyafCinsiKalitesi).val(texts.join(', '));

                        //$(txtElyafCinsiKalitesi).val(texts.join(', '));


                        if (typeof changedCallBackFunc !== 'undefined') {
                            changedCallBackFunc();
                        }

                        

                    });
            };


            var repeater = function () {
                $('.mt-repeater').each(function () {
                    $(this).repeater({
                        show: function () {

                            var elyafOrani = 0;

                            $(".mt-repeater .elyaf-orani").each(function () {
                                var self = this;
                                //console.log($(self).val());
                                if ($(self).val() && $(self).val().length > 0) {
                                    elyafOrani += parseInt($(self).val());
                                }
                            });

                            if (elyafOrani >= 100) {
                                alert("Elyaf Oranı %100 Olmalıdır");                             
                                $(this).remove();
                                return;
                            }


                            $(this).slideDown();

                            ajaxTreeFillTermTreeRef($(this).find(".treeElyafCinsiKalitesi"), "/ZetaCodeNormalIplik/JSTreeElyafCinsiveKalitesi");

                            //modulZetaCodeNormalIplikVm.ajaxTreeFillTermTree("#treeElyafCinsiKalitesi", "/ZetaCodeNormalIplik/JSTreeElyafCinsiveKalitesi");



                            $('.mt-repeater .select2-container').remove();

                            $(".mt-repeater .select2").each(function () {

                                $(this).select2({
                                    placeholder: "Please Select",
                                    width: null
                                });


                            });



                            //$('.mt-repeater .select2-container').css('width', '100%');

                        },

                        hide: function (deleteElement) {
                            if (confirm('Are you sure you want to delete this element?')) {
                                $(this).slideUp(deleteElement);
                            }
                        },

                        ready: function (setIndexes) {


                        },
                        isFirstItemUndeletable: false

                    });
                })
            };

            var ajaxTreeFillTermTreeRef = function (selector, url) {
                var tmp = selector.jstree(true);
                if (tmp) {
                    tmp.destroy();
                }
                selector.jstree({
                    'plugins': ['search', 'checkbox', 'wholerow'],
                    'core': {
                        "multiple": false,
                        'data': {
                            'url': function (node) {
                                return url;
                            },
                            //'data': function (node) {
                            //    //console.log(node);

                            //    return { 'parent': node.id };
                            //}
                        },
                        'animation': false,
                        //'expand_selected_onload': true,
                        'themes': {
                            'icons': false,
                        }
                    },
                    'search': {
                        'show_only_matches': true,
                        'show_only_matches_children': true
                    },
                    'checkbox': {
                        'keep_selected_style': false,
                        'three_state': false,
                        'cascade': ''
                    }
                });

                selector.on('changed.jstree',
                    function (e, data) {
                        var i, j, ids = [], texts = [];
                        for (i = 0, j = data.selected.length; i < j; i++) {
                            var node = data.instance.get_node(data.selected[i]);
                            ids.push(node.id);
                            texts.push(node.text);
                        }
                    
                        var txtElyafCinsiKalitesi = $(selector).closest(".panel-body").find("#TermId");
                        txtElyafCinsiKalitesi.empty();
                        var txtElyafCinsiKalitesiName = $(selector).closest(".panel-body").find("#TermName");
                        txtElyafCinsiKalitesiName.empty();
                   
                        $(txtElyafCinsiKalitesiName).val(texts.join(', '));
                        $(txtElyafCinsiKalitesi).val(ids.join(', '));


                    });


            };




            return {

                ajaxTreeFillTermTree: ajaxTreeFillTermTree,
                ajaxTreeFillTermTreeRef: ajaxTreeFillTermTreeRef,
                repeater: repeater
            };

        })();


        function getPartialIplikKategoriForm(partialName) {
            $.ajax({
                url: "/ZetaCodeNormalIplik/GetIplikKategoriPartial",
                type: "GET",
                data: { partialName: partialName, normalIplikId: $("#NormalIplik_Id").val(), sirketId: $("#Company_Id").val()  }
            })
                .done(function (partialViewResult) {
                    $("#placeholderPartialIplikKategori").empty();
                    $("#placeholderPartialIplikKategori").html(partialViewResult);
                    $("#placeholderPartialIplikKategori .select2").each(function () {

                        $(this).select2({
                            placeholder: "Please Select",
                            width: null
                        });


                    });
                    //$(".mask_number").inputmask('999.99', {
                    //    numericInput: true                    
                    //}); //123456  =>  â‚¬ ___.__1.234,56
                });
        }



    </script>

    <script>

        //function getBlueCompanyData(dll) {

        //    if (dll.val().length > 0) {
        //        var jqXHR = $.ajax({
        //            type: "POST",
        //            url: "/ZetaCodeNormalIplik/GetBlueCompanyData",
        //            data: {
        //                "companyId": dll.val()
        //            }
        //        }).done(function (response, status, jqXHR) {
        //            //console.log(data);
        //            //$('#Code').val(data);
        //            //$("#container").html(data);
        //            if (response.SuccessMessage.length !== 0) {

        //                $("#NormalIplik_BlueKod").val(response.Data.BlueCode);
        //                $("#NormalIplik_BlueSiparisNo").val(response.Data.SiparisNo);

        //            } else {
        //                alert(response.ErrorMessage);
        //            }
        //            //console.log(typeof data);
        //            //console.log(data);
        //            //if (data.IsSucceeded) {
        //            //    swal("Success.", 'Taxonomy Saved.', "success");
        //            //} else {
        //            //    swal("Error!", data.Message, "error");
        //            //}
        //        }).fail(function (jqXHR, status, err) {
        //            swal("Error!", err + '', "error");
        //        }).always(function () {
        //            App.unblockUI();
        //        });
        //    }

        //}

        function getDynamicForms() {

            var self = $("#IplikKategosi_Name");
            if (self.val().length > 0) {
                var iplikKategosiId = $("#IplikKategosi_Id").val();
                if (iplikKategosiId === "296" || iplikKategosiId === "316") {
                    //FLAM
                    getPartialIplikKategoriForm("flam");
                } else if (iplikKategosiId === "294") {
                    //DEGREDE IPLIK
                    getPartialIplikKategoriForm("degrede");
                }
                else if (iplikKategosiId === "317" || iplikKategosiId === "295") {
                    //KIRCILLI IPLIK
                    getPartialIplikKategoriForm("kircili");
                }
                else if (iplikKategosiId === "309" || iplikKategosiId === "318") {
                    //NOPELI IPLIK
                    getPartialIplikKategoriForm("nopeli");
                }
                else if (iplikKategosiId === "314") {
                    //SIM IPLIK
                    getPartialIplikKategoriForm("sim");
                }
                else if (iplikKategosiId === "312" || iplikKategosiId === "319") {
                    //KREP IPLIK
                    getPartialIplikKategoriForm("krep");
                }
                else {

                }

            }
        }

        $(document).ready(function () {


            getDynamicForms();
            setVisibleIplikNo($("#NormalIplik_IplikNoCinsi"));

            modulZetaCodeNormalIplikVm.ajaxTreeFillTermTree("#treeIplikKategosiId", "/ZetaCodeNormalIplik/JSTreeIplikKategoriler"
                , "#IplikKategosi_Id", "#IplikKategosi_Name", getDynamicForms);

            modulZetaCodeNormalIplikVm.ajaxTreeFillTermTree("#treeUretimTeknolojisiId", "/ZetaCodeNormalIplik/JSTreeUretimTeknolojisi"
                , "#NormalIplik_UretimTeknolojisiId", "#NormalIplik_UretimTeknolojisiName");

            @for (int i = 0; i < Model.IplikNolar.Count; i++){
                <text>
            modulZetaCodeNormalIplikVm.ajaxTreeFillTermTreeRef($("#iplik_no@(i) .treeElyafCinsiKalitesi"), "/ZetaCodeNormalIplik/JSTreeElyafCinsiveKalitesi");
                </text>
            }



            modulZetaCodeNormalIplikVm.ajaxTreeFillTermTree("#treeRafyeriTurkiyeId", "/ZetaCodeNormalIplik/JSTreeRafyeriTurkiyeId"
                , "#RafyeriTurkiye_Id", "#RafyeriTurkiye_Name");

            modulZetaCodeNormalIplikVm.ajaxTreeFillTermTree("#treeRafyeriYunanistanId", "/ZetaCodeNormalIplik/JSTreeRafyeriYunanistanId"
                , "#RafyeriYunanistan_Id", "#RafyeriYunanistan_Name");

            setHtmlColorCode($("#NormalIplik_Renkid"));
            modulZetaCodeNormalIplikVm.repeater();

        });
    </script>

    @Scripts.Render("~/bundles/jqueryval")
}