@using FollowMe.Web.Controllers
@model IEnumerable<FollowMe.Web.Models.Company>

@{
    ViewBag.Title = "Company Index";
    ViewBag.Action = "Index";
}

<p>
    @Html.ActionLink("Create New", "Edit")
</p>

<div class="row">
    <div class="col-md-12">
        <!-- BEGIN EXAMPLE TABLE PORTLET-->
        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption font-green">
                    <i class="icon-settings font-red"></i>
                    <span class="caption-subject bold uppercase">Both Scrollbars</span>
                </div>
                <div class="tools"> </div>
            </div>
            <div class="portlet-body table-both-scroll">
                @*<div class="table-responsive">*@
                <table class="table table-striped table-bordered table-hover order-column" id="sample_3">
                    <thead>
                        <tr>
                            <th></th>
                            <th>CompanyType</th>
                            <th>
                                @Html.DisplayNameFor(model => model.CreatedOn)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Code)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CompanyTitle)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.TaxNumber)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.TaxOffice)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ServiceStartDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ServiceEndDate)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @{

                            var lenght = Model.Count();
                        }
                        @for (int i = 0; i < lenght; i++)
                        {
                            var item = Model.ElementAt(i);

                            <tr id="row_@i">
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |
                                    <a onclick="getPersonList('@item.Id','row_@i')" href="javascript:;">List Persons</a>
                                </td>
                                <td>

                                    @if (item.CompanyRootTypeId != null)
                                    {
                                        var temp = (CompanyRootType)item.CompanyRootTypeId;
                                        @:@Enum.GetName(typeof(CompanyRootType), temp)
                                    }

                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CreatedOn)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Code)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CompanyTitle)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TaxNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TaxOffice)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ServiceStartDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ServiceEndDate)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                @*</div>*@
            </div>
        </div>
    </div>
</div>




@section beforeGlobalScripts {

    <script src="~/Content/global/scripts/datatable.min.js" type="text/javascript"></script>
    <script src="~/Content/global/plugins/datatables/datatables.min.js" type="text/javascript"></script>
    <script src="~/Content/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js" type="text/javascript"></script>


}


@section afterGlobalScripts {

    @*<script src="~/Content/pages/scripts/table-datatables-scroller.min.js"></script>*@
    @*<script src="~/Content/pages/scripts/table-datatables-fixedheader.min.js" type="text/javascript"></script>*@


    <script>


        var getPersonList = function (companyId, rowId) {

            App.blockUI();

            if (companyId.length !== 0) {
                var jqXHR = $.ajax({
                    type: "POST",
                    url: "/Company/PersonPartialList",
                    cache: false,
                    data: {
                        "companyId": companyId
                    }
                }).done(function (data, status, jqXHR) {
                    //console.log(data);
                    //$('#Code').val(data);
                    //$("#container").html(data);
                    if (data.length !== 0) {


                        $('#personTable').remove();

                        debugger;
                        $('tbody #' + rowId).after('<tr id=\"personTable\"><td colspan="' + $("tbody").find("tr:first td").length + '">' + data + '</td></tr>');
                        //$('tbody').append('<tr class=\"personTable\"><td>' + data+'</td></tr>')

                        //$persontablerow.append('<tr class=\"innerTable\"><td>" + "</td></tr>');
                    }
                    //console.log(typeof data);
                    //console.log(data);
                    //if (data.IsSucceeded) {
                    //    swal("Success.", 'Taxonomy Saved.', "success");
                    //} else {
                    //    swal("Error!", data.Message, "error");
                    //}
                }).fail(function (jqXHR, status, err) {
                    swal("Error!", err + '', "error");
                }).always(function () {
                    App.unblockUI();
                });
            }
        };


        var initTable3 = function () {
            var table = $('#sample_3');

            var oTable = table.dataTable({

                // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                "language": {
                    "aria": {
                        "sortAscending": ": activate to sort column ascending",
                        "sortDescending": ": activate to sort column descending"
                    },
                    "emptyTable": "No data available in table",
                    "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                    "infoEmpty": "No entries found",
                    "infoFiltered": "(filtered1 from _MAX_ total entries)",
                    "lengthMenu": "_MENU_ entries",
                    "search": "Search:",
                    "zeroRecords": "No matching records found"
                },

                // Or you can use remote translation file
                //"language": {
                //   url: '//cdn.datatables.net/plug-ins/3cfcc339e89/i18n/Portuguese.json'
                //},

                // setup buttons extension: http://datatables.net/extensions/buttons/
                buttons: [
                    { extend: 'print', className: 'btn dark btn-outline' },
                    { extend: 'pdf', className: 'btn green btn-outline' },
                    { extend: 'csv', className: 'btn purple btn-outline ' }
                ],

                // scroller extension: http://datatables.net/extensions/scroller/
                scrollY: 450,
                deferRender: true,
                scroller: true,
                deferRender: true,
                scrollX: true,
                scrollCollapse: true,

                stateSave: true,

                "order": [
                    [0, 'asc']
                ],

                "lengthMenu": [
                    [10, 15, 20, -1],
                    [10, 15, 20, "All"] // change per page values here
                ],
                // set the initial value
                "pageLength": 10,

                "dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable

                // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
                // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js).
                // So when dropdowns used the scrollable div should be removed.
                //"dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
            });
        }



        $(document).ready(function () {
            initTable3();
        });

    </script>

}
