// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace FollowMe.Web.Models
{

    // AddressGuide
    [Table("AddressGuide", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public partial class AddressGuide
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_dbo.AddressGuide", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"Country", Order = 2, TypeName = "nvarchar(max)")]
        [Display(Name = "Country")]
        public string Country { get; set; } // Country

        [Column(@"SortCountry", Order = 3, TypeName = "nvarchar(max)")]
        [Display(Name = "Sort country")]
        public string SortCountry { get; set; } // SortCountry

        [Column(@"Province", Order = 4, TypeName = "nvarchar(max)")]
        [Display(Name = "Province")]
        public string Province { get; set; } // Province

        [Column(@"District", Order = 5, TypeName = "nvarchar(max)")]
        [Display(Name = "District")]
        public string District { get; set; } // District

        [Column(@"ZipCode", Order = 6, TypeName = "nvarchar(max)")]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Zip code")]
        public string ZipCode { get; set; } // ZipCode

        [Column(@"SuburbArea", Order = 7, TypeName = "nvarchar(max)")]
        [Display(Name = "Suburb area")]
        public string SuburbArea { get; set; } // SuburbArea

        [Column(@"Town", Order = 8, TypeName = "nvarchar(max)")]
        [Display(Name = "Town")]
        public string Town { get; set; } // Town

        [Column(@"CountryId", Order = 9, TypeName = "int")]
        [Display(Name = "Country ID")]
        public int? CountryId { get; set; } // CountryId

        [Column(@"Priority", Order = 10, TypeName = "int")]
        [Display(Name = "Priority")]
        public int? Priority { get; set; } // Priority

        public AddressGuide()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
