// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace FollowMe.Web.Models
{

    // Person
    [Table("Person", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public partial class Person
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Id", Order = 1, TypeName = "nvarchar")]
        [Index(@"PK_Person", 1, IsUnique = true, IsClustered = true)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(128)]
        [StringLength(128)]
        [Key]
        [Display(Name = "Id")]
        public string Id { get; set; } // Id (Primary key) (length: 128)

        [Column(@"CompanyId", Order = 2, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Company ID")]
        public string CompanyId { get; set; } // CompanyId (length: 128)

        [Column(@"FirstName", Order = 3, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "First name")]
        public string FirstName { get; set; } // FirstName (length: 64)

        [Column(@"LastName", Order = 4, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(64)]
        [StringLength(64)]
        [Display(Name = "Last name")]
        public string LastName { get; set; } // LastName (length: 64)

        [Column(@"Tckn", Order = 5, TypeName = "nvarchar")]
        [MaxLength(11)]
        [StringLength(11)]
        [Display(Name = "Tckn")]
        public string Tckn { get; set; } // Tckn (length: 11)

        [Column(@"Email", Order = 6, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; } // Email (length: 256)

        [Column(@"PersonnelEmail", Order = 7, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [EmailAddress]
        [Display(Name = "Personnel email")]
        public string PersonnelEmail { get; set; } // PersonnelEmail (length: 500)

        [Column(@"Birthplace", Order = 8, TypeName = "nvarchar")]
        [MaxLength(150)]
        [StringLength(150)]
        [Display(Name = "Birthplace")]
        public string Birthplace { get; set; } // Birthplace (length: 150)

        [Column(@"MaritalStatus", Order = 9, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Marital status")]
        public string MaritalStatus { get; set; } // MaritalStatus (length: 256)

        [Column(@"BirthDay", Order = 10, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Birth day")]
        public System.DateTime? BirthDay { get; set; } // BirthDay

        [Column(@"IsAuthorized", Order = 11, TypeName = "bit")]
        [Required]
        [Display(Name = "Is authorized")]
        public bool IsAuthorized { get; set; } // IsAuthorized

        [Column(@"GenderTypeId", Order = 12, TypeName = "int")]
        [Required]
        [Display(Name = "Gender type ID")]
        public int GenderTypeId { get; set; } // GenderTypeId

        [Column(@"IsPassive", Order = 13, TypeName = "bit")]
        [Display(Name = "Is passive")]
        public bool? IsPassive { get; set; } // IsPassive

        [Column(@"CreatedOn", Order = 14, TypeName = "datetime2")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created on")]
        public System.DateTime? CreatedOn { get; set; } // CreatedOn

        [Column(@"CreatedBy", Order = 15, TypeName = "nvarchar")]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Created by")]
        public string CreatedBy { get; set; } // CreatedBy (length: 128)

        [Column(@"ChangedOn", Order = 16, TypeName = "datetime2")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Changed on")]
        public System.DateTime? ChangedOn { get; set; } // ChangedOn

        [Column(@"ChangedBy", Order = 17, TypeName = "nvarchar")]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Changed by")]
        public string ChangedBy { get; set; } // ChangedBy (length: 128)

        [Column(@"DriversLicenseNo", Order = 18, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Drivers license no")]
        public string DriversLicenseNo { get; set; } // DriversLicenseNo (length: 500)

        [Column(@"PassportNo", Order = 19, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Passport no")]
        public string PassportNo { get; set; } // PassportNo (length: 500)

        [Column(@"ForeignIdentityNo", Order = 20, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Foreign identity no")]
        public string ForeignIdentityNo { get; set; } // ForeignIdentityNo (length: 500)

        [Column(@"RelationshipStatusId", Order = 21, TypeName = "int")]
        [Display(Name = "Relationship status ID")]
        public int? RelationshipStatusId { get; set; } // RelationshipStatusId

        [Column(@"ReligionId", Order = 22, TypeName = "int")]
        [Display(Name = "Religion ID")]
        public int? ReligionId { get; set; } // ReligionId

        [Column(@"BloodGroupId", Order = 23, TypeName = "int")]
        [Display(Name = "Blood group ID")]
        public int? BloodGroupId { get; set; } // BloodGroupId

        [Column(@"EducationLevelId", Order = 24, TypeName = "int")]
        [Display(Name = "Education level ID")]
        public int? EducationLevelId { get; set; } // EducationLevelId

        [Column(@"NameDay", Order = 25, TypeName = "nvarchar")]
        [MaxLength(32)]
        [StringLength(32)]
        [Display(Name = "Name day")]
        public string NameDay { get; set; } // NameDay (length: 32)

        [Column(@"Interphone", Order = 26, TypeName = "nvarchar")]
        [MaxLength(32)]
        [StringLength(32)]
        [Display(Name = "Interphone")]
        public string Interphone { get; set; } // Interphone (length: 32)

        [Column(@"ReasonWhyPassiveId", Order = 27, TypeName = "int")]
        [Display(Name = "Reason why passive ID")]
        public int? ReasonWhyPassiveId { get; set; } // ReasonWhyPassiveId

        [Column(@"PositionId", Order = 28, TypeName = "int")]
        [Display(Name = "Position ID")]
        public int? PositionId { get; set; } // PositionId

        // Reverse navigation

        /// <summary>
        /// Child PersonnelAddress where [PersonnelAddress].[PersonnelId] point to this entity (FK_PersonnelAddress_Person)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PersonnelAddress> PersonnelAddress { get; set; } // PersonnelAddress.FK_PersonnelAddress_Person
        /// <summary>
        /// Child PersonnelBank where [PersonnelBank].[PersonnelId] point to this entity (FK_PersonnelBank_Person)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PersonnelBank> PersonnelBank { get; set; } // PersonnelBank.FK_PersonnelBank_Person
        /// <summary>
        /// Child PersonnelEducation where [PersonnelEducation].[PersonnelId] point to this entity (FK_PersonnelEducation_Person)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PersonnelEducation> PersonnelEducation { get; set; } // PersonnelEducation.FK_PersonnelEducation_Person
        /// <summary>
        /// Child PersonnelTelephone where [PersonnelTelephone].[PersonnelId] point to this entity (FK_PersonnelTelephone_Person)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PersonnelTelephone> PersonnelTelephone { get; set; } // PersonnelTelephone.FK_PersonnelTelephone_Person
        /// <summary>
        /// Child PersonnelTerm where [PersonnelTerm].[PersonnelId] point to this entity (FK_PersonnelTerm_Person)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PersonnelTerm> PersonnelTerm { get; set; } // PersonnelTerm.FK_PersonnelTerm_Person

        // Foreign keys

        /// <summary>
        /// Parent Company pointed by [Person].([CompanyId]) (FK_Person_Company)
        /// </summary>
        [ForeignKey("CompanyId")] public virtual Company Company { get; set; } // FK_Person_Company

        public Person()
        {
            IsAuthorized = false;
            GenderTypeId = 0;
            PersonnelAddress = new System.Collections.Generic.HashSet<PersonnelAddress>();
            PersonnelBank = new System.Collections.Generic.HashSet<PersonnelBank>();
            PersonnelEducation = new System.Collections.Generic.HashSet<PersonnelEducation>();
            PersonnelTelephone = new System.Collections.Generic.HashSet<PersonnelTelephone>();
            PersonnelTerm = new System.Collections.Generic.HashSet<PersonnelTerm>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
