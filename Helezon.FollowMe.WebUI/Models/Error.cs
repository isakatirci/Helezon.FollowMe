// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace FollowMe.Web.Models
{

    // Error
    [Table("Error", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public partial class Error
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_ERROR", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"UserId", Order = 2, TypeName = "varchar")]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "User ID")]
        public string UserId { get; set; } // UserId (length: 128)

        [Column(@"ErrorDate", Order = 3, TypeName = "datetime2")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Error date")]
        public System.DateTime? ErrorDate { get; set; } // ErrorDate

        [Column(@"IpAddress", Order = 4, TypeName = "nvarchar")]
        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Ip address")]
        public string IpAddress { get; set; } // IpAddress (length: 40)

        [Column(@"UserAgent", Order = 5, TypeName = "nvarchar(max)")]
        [Display(Name = "User agent")]
        public string UserAgent { get; set; } // UserAgent

        [Column(@"Exception", Order = 6, TypeName = "nvarchar(max)")]
        [Display(Name = "Exception")]
        public string Exception { get; set; } // Exception

        [Column(@"Message", Order = 7, TypeName = "nvarchar(max)")]
        [Display(Name = "Message")]
        public string Message { get; set; } // Message

        [Column(@"Everything", Order = 8, TypeName = "nvarchar(max)")]
        [Display(Name = "Everything")]
        public string Everything { get; set; } // Everything

        [Column(@"HttpReferer", Order = 9, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Http referer")]
        public string HttpReferer { get; set; } // HttpReferer (length: 500)

        [Column(@"PathAndQuery", Order = 10, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Path and query")]
        public string PathAndQuery { get; set; } // PathAndQuery (length: 500)

        [Column(@"IsPassive", Order = 11, TypeName = "bit")]
        [Required]
        [Display(Name = "Is passive")]
        public bool IsPassive { get; set; } // IsPassive

        public Error()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
