// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace FollowMe.Web.Models
{

    // Term
    [Table("Term", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public partial class Term
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_dbo.Term", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"TaxonomyId", Order = 2, TypeName = "int")]
        [Required]
        [Display(Name = "Taxonomy ID")]
        public int TaxonomyId { get; set; } // TaxonomyId

        [Column(@"Name", Order = 3, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 200)

        [Column(@"CompanyId", Order = 4, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Company ID")]
        public string CompanyId { get; set; } // CompanyId (length: 128)

        [Column(@"Color", Order = 5, TypeName = "nvarchar(max)")]
        [Display(Name = "Color")]
        public string Color { get; set; } // Color

        [Column(@"NoChildrenClass", Order = 6, TypeName = "bit")]
        [Required]
        [Display(Name = "No children class")]
        public bool NoChildrenClass { get; set; } // NoChildrenClass

        [Column(@"NoDragClass", Order = 7, TypeName = "bit")]
        [Required]
        [Display(Name = "No drag class")]
        public bool NoDragClass { get; set; } // NoDragClass

        [Column(@"IsPassive", Order = 8, TypeName = "bit")]
        [Display(Name = "Is passive")]
        public bool? IsPassive { get; set; } // IsPassive

        [Column(@"CreatedOn", Order = 9, TypeName = "datetime2")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created on")]
        public System.DateTime? CreatedOn { get; set; } // CreatedOn

        [Column(@"CreatedBy", Order = 10, TypeName = "nvarchar")]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Created by")]
        public string CreatedBy { get; set; } // CreatedBy (length: 128)

        [Column(@"ChangedOn", Order = 11, TypeName = "datetime2")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Changed on")]
        public System.DateTime? ChangedOn { get; set; } // ChangedOn

        [Column(@"ChangedBy", Order = 12, TypeName = "nvarchar")]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Changed by")]
        public string ChangedBy { get; set; } // ChangedBy (length: 128)

        [Column(@"Disabled", Order = 13, TypeName = "bit")]
        [Display(Name = "Disabled")]
        public bool? Disabled { get; set; } // Disabled

        // Reverse navigation

        /// <summary>
        /// Child CompanyTerm where [CompanyTerm].[TermId] point to this entity (FK_CompanyTerm_Term)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CompanyTerm> CompanyTerm { get; set; } // CompanyTerm.FK_CompanyTerm_Term
        /// <summary>
        /// Child PersonnelTerm where [PersonnelTerm].[TermId] point to this entity (FK_PersonnelTerm_Term)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PersonnelTerm> PersonnelTerm { get; set; } // PersonnelTerm.FK_PersonnelTerm_Term

        public Term()
        {
            NoChildrenClass = false;
            NoDragClass = false;
            CompanyTerm = new System.Collections.Generic.HashSet<CompanyTerm>();
            PersonnelTerm = new System.Collections.Generic.HashSet<PersonnelTerm>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
