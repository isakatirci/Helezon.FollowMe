// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace FollowMe.Web.Models
{

    // BankGuide
    [Table("BankGuide", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public partial class BankGuide
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_dbo.BankGuide", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"CompanyId", Order = 2, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Company ID")]
        public string CompanyId { get; set; } // CompanyId (length: 128)

        [Column(@"TermId", Order = 3, TypeName = "int")]
        [Display(Name = "Term ID")]
        public int? TermId { get; set; } // TermId

        [Column(@"BankName", Order = 4, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(150)]
        [StringLength(150)]
        [Display(Name = "Bank name")]
        public string BankName { get; set; } // BankName (length: 150)

        [Column(@"Province", Order = 5, TypeName = "nvarchar")]
        [MaxLength(150)]
        [StringLength(150)]
        [Display(Name = "Province")]
        public string Province { get; set; } // Province (length: 150)

        [Column(@"District", Order = 6, TypeName = "nvarchar")]
        [MaxLength(150)]
        [StringLength(150)]
        [Display(Name = "District")]
        public string District { get; set; } // District (length: 150)

        [Column(@"BranchName", Order = 7, TypeName = "nvarchar")]
        [MaxLength(150)]
        [StringLength(150)]
        [Display(Name = "Branch name")]
        public string BranchName { get; set; } // BranchName (length: 150)

        [Column(@"BranchCode", Order = 8, TypeName = "nvarchar")]
        [MaxLength(150)]
        [StringLength(150)]
        [Display(Name = "Branch code")]
        public string BranchCode { get; set; } // BranchCode (length: 150)

        [Column(@"SwiftNo", Order = 9, TypeName = "nvarchar")]
        [MaxLength(150)]
        [StringLength(150)]
        [Display(Name = "Swift no")]
        public string SwiftNo { get; set; } // SwiftNo (length: 150)

        [Column(@"IsPassive", Order = 10, TypeName = "bit")]
        [Display(Name = "Is passive")]
        public bool? IsPassive { get; set; } // IsPassive

        [Column(@"CreatedOn", Order = 11, TypeName = "datetime2")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created on")]
        public System.DateTime? CreatedOn { get; set; } // CreatedOn

        [Column(@"CreatedBy", Order = 12, TypeName = "nvarchar")]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Created by")]
        public string CreatedBy { get; set; } // CreatedBy (length: 128)

        [Column(@"ChangedOn", Order = 13, TypeName = "datetime2")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Changed on")]
        public System.DateTime? ChangedOn { get; set; } // ChangedOn

        [Column(@"ChangedBy", Order = 14, TypeName = "nvarchar")]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Changed by")]
        public string ChangedBy { get; set; } // ChangedBy (length: 128)

        public BankGuide()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
