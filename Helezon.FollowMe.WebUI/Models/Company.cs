// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace FollowMe.Web.Models
{

    // Company
    [Table("Company", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public partial class Company
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Id", Order = 1, TypeName = "nvarchar")]
        [Index(@"PK_Company", 1, IsUnique = true, IsClustered = true)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(128)]
        [StringLength(128)]
        [Key]
        [Display(Name = "Id")]
        public string Id { get; set; } // Id (Primary key) (length: 128)

        [Column(@"ParentId", Order = 2, TypeName = "nvarchar")]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Parent ID")]
        public string ParentId { get; set; } // ParentId (length: 128)

        [Column(@"CompanyRootTypeId", Order = 3, TypeName = "int")]
        [Display(Name = "Company root type ID")]
        public int? CompanyRootTypeId { get; set; } // CompanyRootTypeId

        [Column(@"Code", Order = 4, TypeName = "int")]
        [Required]
        [Display(Name = "Code")]
        public int Code { get; set; } // Code

        [Column(@"Name", Order = 5, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 256)

        [Column(@"Email", Order = 6, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; } // Email (length: 500)

        [Column(@"CompanyTitle", Order = 7, TypeName = "nvarchar")]
        [MaxLength(512)]
        [StringLength(512)]
        [Display(Name = "Company title")]
        public string CompanyTitle { get; set; } // CompanyTitle (length: 512)

        [Column(@"Brand", Order = 8, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Brand")]
        public string Brand { get; set; } // Brand (length: 500)

        [Column(@"TaxNumber", Order = 9, TypeName = "nvarchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Tax number")]
        public string TaxNumber { get; set; } // TaxNumber (length: 10)

        [Column(@"TaxOffice", Order = 10, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Tax office")]
        public string TaxOffice { get; set; } // TaxOffice (length: 256)

        [Column(@"TradeRegisterNumber", Order = 11, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Trade register number")]
        public string TradeRegisterNumber { get; set; } // TradeRegisterNumber (length: 100)

        [Column(@"FoundingDate", Order = 12, TypeName = "datetime2")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Founding date")]
        public System.DateTime? FoundingDate { get; set; } // FoundingDate

        [Column(@"IsWebsiteAvailable", Order = 13, TypeName = "bit")]
        [Display(Name = "Is website available")]
        public bool? IsWebsiteAvailable { get; set; } // IsWebsiteAvailable

        [Column(@"Website", Order = 14, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Website")]
        public string Website { get; set; } // Website (length: 500)

        [Column(@"ReasonWhyPassiveId", Order = 15, TypeName = "int")]
        [Display(Name = "Reason why passive ID")]
        public int? ReasonWhyPassiveId { get; set; } // ReasonWhyPassiveId

        [Column(@"AddressTypeId", Order = 16, TypeName = "int")]
        [Display(Name = "Address type ID")]
        public int? AddressTypeId { get; set; } // AddressTypeId

        [Column(@"IsPassive", Order = 17, TypeName = "bit")]
        [Required]
        [Display(Name = "Is passive")]
        public bool IsPassive { get; set; } // IsPassive

        [Column(@"CreatedOn", Order = 18, TypeName = "datetime2")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created on")]
        public System.DateTime? CreatedOn { get; set; } // CreatedOn

        [Column(@"CreatedBy", Order = 19, TypeName = "nvarchar")]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Created by")]
        public string CreatedBy { get; set; } // CreatedBy (length: 128)

        [Column(@"ChangedOn", Order = 20, TypeName = "datetime2")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Changed on")]
        public System.DateTime? ChangedOn { get; set; } // ChangedOn

        [Column(@"ChangedBy", Order = 21, TypeName = "nvarchar")]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Changed by")]
        public string ChangedBy { get; set; } // ChangedBy (length: 128)

        // Reverse navigation

        /// <summary>
        /// Child CompanyAddress where [CompanyAddress].[CompanyId] point to this entity (FK_CompanyAddress_Company)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CompanyAddress> CompanyAddress { get; set; } // CompanyAddress.FK_CompanyAddress_Company
        /// <summary>
        /// Child CompanyBank where [CompanyBank].[CompanyId] point to this entity (FK_CompanyBank_Company)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CompanyBank> CompanyBank { get; set; } // CompanyBank.FK_CompanyBank_Company
        /// <summary>
        /// Child CompanyPicture where [CompanyPicture].[CompanyId] point to this entity (FK_CompanyImage_Company)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CompanyPicture> CompanyPicture { get; set; } // CompanyPicture.FK_CompanyImage_Company
        /// <summary>
        /// Child CompanyTelephone where [CompanyTelephone].[CompanyId] point to this entity (FK_CompanyTelephone_Company)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CompanyTelephone> CompanyTelephone { get; set; } // CompanyTelephone.FK_CompanyTelephone_Company
        /// <summary>
        /// Child CompanyTerm where [CompanyTerm].[CompanyId] point to this entity (FK_CompanyTerm_Company)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CompanyTerm> CompanyTerm { get; set; } // CompanyTerm.FK_CompanyTerm_Company
        /// <summary>
        /// Child LogisticsCompany where [LogisticsCompany].[CompanyId] point to this entity (FK_LogisticsCompany_Company)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<LogisticsCompany> LogisticsCompany { get; set; } // LogisticsCompany.FK_LogisticsCompany_Company
        /// <summary>
        /// Child Person where [Person].[CompanyId] point to this entity (FK_Person_Company)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Person> Person { get; set; } // Person.FK_Person_Company

        public Company()
        {
            CompanyAddress = new System.Collections.Generic.HashSet<CompanyAddress>();
            CompanyBank = new System.Collections.Generic.HashSet<CompanyBank>();
            CompanyPicture = new System.Collections.Generic.HashSet<CompanyPicture>();
            CompanyTelephone = new System.Collections.Generic.HashSet<CompanyTelephone>();
            CompanyTerm = new System.Collections.Generic.HashSet<CompanyTerm>();
            LogisticsCompany = new System.Collections.Generic.HashSet<LogisticsCompany>();
            Person = new System.Collections.Generic.HashSet<Person>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
