// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace FollowMe.Web.Models
{

    // LogisticsCompany
    [Table("LogisticsCompany", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public partial class LogisticsCompany
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_dbo.LogisticsCompany", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"CompanyId", Order = 2, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Company ID")]
        public string CompanyId { get; set; } // CompanyId (length: 128)

        [Column(@"ImportCode", Order = 3, TypeName = "nvarchar(max)")]
        [Display(Name = "Import code")]
        public string ImportCode { get; set; } // ImportCode

        [Column(@"ExportCode", Order = 4, TypeName = "nvarchar(max)")]
        [Display(Name = "Export code")]
        public string ExportCode { get; set; } // ExportCode

        [Column(@"LogisticsCompanyId", Order = 5, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Logistics company ID")]
        public string LogisticsCompanyId { get; set; } // LogisticsCompanyId (length: 128)

        // Foreign keys

        /// <summary>
        /// Parent Company pointed by [LogisticsCompany].([CompanyId]) (FK_LogisticsCompany_Company)
        /// </summary>
        [ForeignKey("CompanyId")] public virtual Company Company { get; set; } // FK_LogisticsCompany_Company

        public LogisticsCompany()
        {
            LogisticsCompanyId = "00000000-0000-0000-0000-000000000000";
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
