// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Helezon.FollowMe.Entities.Models
{
    using Repository.Pattern.Ef6;

    // Company
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public partial class CompanyMap : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Company>
    {
        public CompanyMap()
            : this("dbo")
        {
        }

        public CompanyMap(string schema)
        {
            ToTable("Company", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("nvarchar").IsRequired().HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ParentId).HasColumnName(@"ParentId").HasColumnType("nvarchar").IsOptional().HasMaxLength(128);
            Property(x => x.CompanyRootTypeId).HasColumnName(@"CompanyRootTypeId").HasColumnType("int").IsOptional();
            Property(x => x.Code).HasColumnName(@"Code").HasColumnType("int").IsRequired();
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(256);
            Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.CompanyTitle).HasColumnName(@"CompanyTitle").HasColumnType("nvarchar").IsOptional().HasMaxLength(512);
            Property(x => x.Brand).HasColumnName(@"Brand").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.TaxNumber).HasColumnName(@"TaxNumber").HasColumnType("nvarchar").IsOptional().HasMaxLength(10);
            Property(x => x.TaxOffice).HasColumnName(@"TaxOffice").HasColumnType("nvarchar").IsOptional().HasMaxLength(256);
            Property(x => x.TradeRegisterNumber).HasColumnName(@"TradeRegisterNumber").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.FoundingDate).HasColumnName(@"FoundingDate").HasColumnType("datetime2").IsOptional();
            Property(x => x.IsWebsiteAvailable).HasColumnName(@"IsWebsiteAvailable").HasColumnType("bit").IsOptional();
            Property(x => x.Website).HasColumnName(@"Website").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.ReasonWhyPassiveId).HasColumnName(@"ReasonWhyPassiveId").HasColumnType("int").IsOptional();
            Property(x => x.AddressTypeId).HasColumnName(@"AddressTypeId").HasColumnType("int").IsOptional();
            Property(x => x.IsPassive).HasColumnName(@"IsPassive").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedOn).HasColumnName(@"CreatedOn").HasColumnType("datetime2").IsOptional();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").IsOptional().HasMaxLength(128);
            Property(x => x.ChangedOn).HasColumnName(@"ChangedOn").HasColumnType("datetime2").IsOptional();
            Property(x => x.ChangedBy).HasColumnName(@"ChangedBy").HasColumnType("nvarchar").IsOptional().HasMaxLength(128);
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
