// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Helezon.FollowMe.Entities.Models
{
    using Repository.Pattern.Ef6;

    // ZetaCodeFanteziIplik
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public partial class ZetaCodeFanteziIplik: Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public string UrunIsmi { get; set; } // UrunIsmi (length: 800)
        public int? IplikKategosiId { get; set; } // IplikKategosiId
        public string SirketId { get; set; } // SirketId (length: 128)
        public bool Master { get; set; } // Master
        public int ZetaCode { get; set; } // ZetaCode
        public string ZetaCodePrevious { get; set; } // ZetaCodePrevious (length: 200)
        public string Nm { get; set; } // NM (length: 10)
        public string Fl { get; set; } // FL (length: 10)
        public string Ea { get; set; } // EA (length: 10)
        public string Dny { get; set; } // DNY (length: 10)
        public string IplikNoCinsi { get; set; } // IplikNoCinsi (length: 10)
        public int? UlkeId { get; set; } // UlkeId
        public string BlueUrunKodIsmi { get; set; } // BlueUrunKodIsmi (length: 200)
        public int BlueKod { get; set; } // BlueKod
        public int BlueSiparisNo { get; set; } // BlueSiparisNo
        public int? RafyeriTurkiyeId { get; set; } // RafyeriTurkiyeId
        public int? RafyeriYunanistanId { get; set; } // RafyeriYunanistanId
        public bool IsPassive { get; set; } // IsPassive
        public System.DateTime? CreatedOn { get; set; } // CreatedOn
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public System.DateTime? ChangedOn { get; set; } // ChangedOn
        public string ChangedBy { get; set; } // ChangedBy (length: 128)

        // Reverse navigation

        /// <summary>
        /// Child ZetaCodeFanteziIplikPicture where [ZetaCodeFanteziIplikPicture].[ZetaCodeFanteziIplikId] point to this entity (FK_ZetaCodeFanteziIplikPicture_ZetaCodeFanteziIplik)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ZetaCodeFanteziIplikPicture> ZetaCodeFanteziIplikPicture { get; set; } // ZetaCodeFanteziIplikPicture.FK_ZetaCodeFanteziIplikPicture_ZetaCodeFanteziIplik
        /// <summary>
        /// Child ZetaCodeNormalIplik (Many-to-Many) mapped by table [ZetaCodeNormalFantezi]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ZetaCodeNormalIplik> ZetaCodeNormalIplik { get; set; } // Many to many mapping

        // Foreign keys

        /// <summary>
        /// Parent Company pointed by [ZetaCodeFanteziIplik].([SirketId]) (FK_ZetaCodeFanteziIplik_Company)
        /// </summary>
        public virtual Company Company { get; set; } // FK_ZetaCodeFanteziIplik_Company

        public ZetaCodeFanteziIplik()
        {
            ZetaCodeFanteziIplikPicture = new System.Collections.Generic.List<ZetaCodeFanteziIplikPicture>();
            ZetaCodeNormalIplik = new System.Collections.Generic.List<ZetaCodeNormalIplik>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
