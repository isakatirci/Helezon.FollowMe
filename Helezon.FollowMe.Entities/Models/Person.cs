// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Helezon.FollowMe.Entities.Models
{
    using FollowMe.Entities.Models.Mapping;
    using Repository.Pattern.Ef6;

    // Person
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public partial class Person: Entity
    {
        public string Id { get; set; } // Id (Primary key) (length: 128)
        public string CompanyId { get; set; } // CompanyId (length: 128)
        public string FirstName { get; set; } // FirstName (length: 64)
        public string LastName { get; set; } // LastName (length: 64)
        public string Tckn { get; set; } // Tckn (length: 11)
        public string Email { get; set; } // Email (length: 256)
        public string PersonnelEmail { get; set; } // PersonnelEmail (length: 500)
        public string Birthplace { get; set; } // Birthplace (length: 150)
        public string MaritalStatus { get; set; } // MaritalStatus (length: 256)
        public System.DateTime? BirthDay { get; set; } // BirthDay
        public bool IsAuthorized { get; set; } // IsAuthorized
        public int GenderTypeId { get; set; } // GenderTypeId
        public bool? IsPassive { get; set; } // IsPassive
        public System.DateTime? CreatedOn { get; set; } // CreatedOn
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public System.DateTime? ChangedOn { get; set; } // ChangedOn
        public string ChangedBy { get; set; } // ChangedBy (length: 128)
        public string DriversLicenseNo { get; set; } // DriversLicenseNo (length: 500)
        public string PassportNo { get; set; } // PassportNo (length: 500)
        public string ForeignIdentityNo { get; set; } // ForeignIdentityNo (length: 500)
        public int? RelationshipStatusId { get; set; } // RelationshipStatusId
        public int? ReligionId { get; set; } // ReligionId
        public int? BloodGroupId { get; set; } // BloodGroupId
        public int? EducationLevelId { get; set; } // EducationLevelId
        public string NameDay { get; set; } // NameDay (length: 32)
        public string Interphone { get; set; } // Interphone (length: 32)
        public int? ReasonWhyPassiveId { get; set; } // ReasonWhyPassiveId
        public int? PositionId { get; set; } // PositionId

        // Reverse navigation

        /// <summary>
        /// Child PersonnelAddresses where [PersonnelAddress].[PersonnelId] point to this entity (FK_PersonnelAddress_Person)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PersonnelAddress> PersonnelAddresses { get; set; } // PersonnelAddress.FK_PersonnelAddress_Person
        /// <summary>
        /// Child PersonnelBanks where [PersonnelBank].[PersonnelId] point to this entity (FK_PersonnelBank_Person)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PersonnelBank> PersonnelBanks { get; set; } // PersonnelBank.FK_PersonnelBank_Person
        /// <summary>
        /// Child PersonnelEducations where [PersonnelEducation].[PersonnelId] point to this entity (FK_PersonnelEducation_Person)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PersonnelEducation> PersonnelEducations { get; set; } // PersonnelEducation.FK_PersonnelEducation_Person
        /// <summary>
        /// Child PersonnelImages where [PersonnelImage].[PersonnelId] point to this entity (FK_PersonnelImage_Person)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PersonnelImage> PersonnelImages { get; set; } // PersonnelImage.FK_PersonnelImage_Person
        /// <summary>
        /// Child PersonnelTelephones where [PersonnelTelephone].[PersonnelId] point to this entity (FK_PersonnelTelephone_Person)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PersonnelTelephone> PersonnelTelephones { get; set; } // PersonnelTelephone.FK_PersonnelTelephone_Person
        /// <summary>
        /// Child PersonnelTerms where [PersonnelTerm].[PersonnelId] point to this entity (FK_PersonnelTerm_Person)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PersonnelTerm> PersonnelTerms { get; set; } // PersonnelTerm.FK_PersonnelTerm_Person

        // Foreign keys

        /// <summary>
        /// Parent Company pointed by [Person].([CompanyId]) (FK_Person_Company)
        /// </summary>
        public virtual Company Company { get; set; } // FK_Person_Company

        public Person()
        {
            IsAuthorized = false;
            GenderTypeId = 0;
            PersonnelAddresses = new System.Collections.Generic.List<PersonnelAddress>();
            PersonnelBanks = new System.Collections.Generic.List<PersonnelBank>();
            PersonnelEducations = new System.Collections.Generic.List<PersonnelEducation>();
            PersonnelImages = new System.Collections.Generic.List<PersonnelImage>();
            PersonnelTelephones = new System.Collections.Generic.List<PersonnelTelephone>();
            PersonnelTerms = new System.Collections.Generic.List<PersonnelTerm>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
