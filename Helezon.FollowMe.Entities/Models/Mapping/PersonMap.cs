// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Helezon.FollowMe.Entities.Models.Mapping
{

    // Person
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public partial class PersonMap : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Person>
    {
        public PersonMap()
            : this("dbo")
        {
        }

        public PersonMap(string schema)
        {
            ToTable("Person", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("nvarchar").IsRequired().HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CompanyId).HasColumnName(@"CompanyId").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("nvarchar").IsRequired().HasMaxLength(64);
            Property(x => x.LastName).HasColumnName(@"LastName").HasColumnType("nvarchar").IsRequired().HasMaxLength(64);
            Property(x => x.Tckn).HasColumnName(@"Tckn").HasColumnType("nvarchar").IsOptional().HasMaxLength(11);
            Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar").IsOptional().HasMaxLength(256);
            Property(x => x.PersonnelEmail).HasColumnName(@"PersonnelEmail").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.Birthplace).HasColumnName(@"Birthplace").HasColumnType("nvarchar").IsOptional().HasMaxLength(150);
            Property(x => x.MaritalStatus).HasColumnName(@"MaritalStatus").HasColumnType("nvarchar").IsOptional().HasMaxLength(256);
            Property(x => x.BirthDay).HasColumnName(@"BirthDay").HasColumnType("datetime").IsOptional();
            Property(x => x.IsAuthorized).HasColumnName(@"IsAuthorized").HasColumnType("bit").IsRequired();
            Property(x => x.GenderTypeId).HasColumnName(@"GenderTypeId").HasColumnType("int").IsRequired();
            Property(x => x.IsPassive).HasColumnName(@"IsPassive").HasColumnType("bit").IsOptional();
            Property(x => x.CreatedOn).HasColumnName(@"CreatedOn").HasColumnType("datetime2").IsOptional();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").IsOptional().HasMaxLength(128);
            Property(x => x.ChangedOn).HasColumnName(@"ChangedOn").HasColumnType("datetime2").IsOptional();
            Property(x => x.ChangedBy).HasColumnName(@"ChangedBy").HasColumnType("nvarchar").IsOptional().HasMaxLength(128);
            Property(x => x.DriversLicenseNo).HasColumnName(@"DriversLicenseNo").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.PassportNo).HasColumnName(@"PassportNo").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.ForeignIdentityNo).HasColumnName(@"ForeignIdentityNo").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.RelationshipStatusId).HasColumnName(@"RelationshipStatusId").HasColumnType("int").IsOptional();
            Property(x => x.ReligionId).HasColumnName(@"ReligionId").HasColumnType("int").IsOptional();
            Property(x => x.BloodGroupId).HasColumnName(@"BloodGroupId").HasColumnType("int").IsOptional();
            Property(x => x.EducationLevelId).HasColumnName(@"EducationLevelId").HasColumnType("int").IsOptional();
            Property(x => x.NameDay).HasColumnName(@"NameDay").HasColumnType("nvarchar").IsOptional().HasMaxLength(32);
            Property(x => x.Interphone).HasColumnName(@"Interphone").HasColumnType("nvarchar").IsOptional().HasMaxLength(32);
            Property(x => x.ReasonWhyPassiveId).HasColumnName(@"ReasonWhyPassiveId").HasColumnType("int").IsOptional();
            Property(x => x.PositionId).HasColumnName(@"PositionId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasRequired(a => a.Company).WithMany(b => b.People).HasForeignKey(c => c.CompanyId).WillCascadeOnDelete(false); // FK_Person_Company
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
